"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/auth/login/route";
exports.ids = ["app/api/auth/login/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "node:buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:buffer");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:util");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Flogin%2Froute&page=%2Fapi%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Flogin%2Froute.js&appDir=C%3A%5CUsers%5Cknsja%5CDesktop%5COdoo%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cknsja%5CDesktop%5COdoo&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Flogin%2Froute&page=%2Fapi%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Flogin%2Froute.js&appDir=C%3A%5CUsers%5Cknsja%5CDesktop%5COdoo%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cknsja%5CDesktop%5COdoo&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_knsja_Desktop_Odoo_app_api_auth_login_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/auth/login/route.js */ \"(rsc)/./app/api/auth/login/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/auth/login/route\",\n        pathname: \"/api/auth/login\",\n        filename: \"route\",\n        bundlePath: \"app/api/auth/login/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\knsja\\\\Desktop\\\\Odoo\\\\app\\\\api\\\\auth\\\\login\\\\route.js\",\n    nextConfigOutput,\n    userland: C_Users_knsja_Desktop_Odoo_app_api_auth_login_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/auth/login/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhdXRoJTJGbG9naW4lMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmF1dGglMkZsb2dpbiUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmF1dGglMkZsb2dpbiUyRnJvdXRlLmpzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNrbnNqYSU1Q0Rlc2t0b3AlNUNPZG9vJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNrbnNqYSU1Q0Rlc2t0b3AlNUNPZG9vJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNnQjtBQUM3RjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2V4cGVuc2UtbWFuYWdlbWVudC1zeXN0ZW0vPzU3NmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxca25zamFcXFxcRGVza3RvcFxcXFxPZG9vXFxcXGFwcFxcXFxhcGlcXFxcYXV0aFxcXFxsb2dpblxcXFxyb3V0ZS5qc1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYXV0aC9sb2dpbi9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2F1dGgvbG9naW5cIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2F1dGgvbG9naW4vcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxrbnNqYVxcXFxEZXNrdG9wXFxcXE9kb29cXFxcYXBwXFxcXGFwaVxcXFxhdXRoXFxcXGxvZ2luXFxcXHJvdXRlLmpzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9hdXRoL2xvZ2luL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Flogin%2Froute&page=%2Fapi%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Flogin%2Froute.js&appDir=C%3A%5CUsers%5Cknsja%5CDesktop%5COdoo%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cknsja%5CDesktop%5COdoo&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/auth/login/route.js":
/*!*************************************!*\
  !*** ./app/api/auth/login/route.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_db_light__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../lib/db-light */ \"(rsc)/./lib/db-light.js\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../lib/auth */ \"(rsc)/./lib/auth.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/v4.js\");\n\n\n\n\nasync function POST(request) {\n    try {\n        const { email, password } = await request.json();\n        // Create demo company if it doesn't exist\n        let company = _lib_db_light__WEBPACK_IMPORTED_MODULE_1__.db.getCompany(\"demo-company-id\");\n        if (!company) {\n            company = {\n                id: \"demo-company-id\",\n                name: \"Demo Company\",\n                currency: \"USD\",\n                country: \"US\",\n                createdAt: new Date(),\n                updatedAt: new Date()\n            };\n            _lib_db_light__WEBPACK_IMPORTED_MODULE_1__.db.createCompany(company);\n        }\n        // Create demo users if they don't exist\n        const demoUsers = [\n            {\n                id: \"admin-user-id\",\n                email: \"admin@company.com\",\n                name: \"Demo Admin\",\n                role: \"admin\",\n                companyId: \"demo-company-id\"\n            },\n            {\n                id: \"manager-user-id\",\n                email: \"manager@company.com\",\n                name: \"Demo Manager\",\n                role: \"manager\",\n                companyId: \"demo-company-id\",\n                managerId: \"admin-user-id\"\n            },\n            {\n                id: \"employee-user-id\",\n                email: \"employee@company.com\",\n                name: \"Demo Employee\",\n                role: \"employee\",\n                companyId: \"demo-company-id\",\n                managerId: \"manager-user-id\"\n            }\n        ];\n        // Create demo users if they don't exist\n        demoUsers.forEach((demoUser)=>{\n            if (!_lib_db_light__WEBPACK_IMPORTED_MODULE_1__.db.getUser(demoUser.id)) {\n                _lib_db_light__WEBPACK_IMPORTED_MODULE_1__.db.createUser({\n                    ...demoUser,\n                    createdAt: new Date(),\n                    updatedAt: new Date()\n                });\n            }\n        });\n        // Check if user exists\n        let user = _lib_db_light__WEBPACK_IMPORTED_MODULE_1__.db.getUserByEmail(email);\n        if (!user) {\n            // Create new user with provided email\n            const userId = (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n            user = {\n                id: userId,\n                email,\n                name: email.split(\"@\")[0],\n                role: \"admin\",\n                companyId: \"demo-company-id\",\n                createdAt: new Date(),\n                updatedAt: new Date()\n            };\n            _lib_db_light__WEBPACK_IMPORTED_MODULE_1__.db.createUser(user);\n        }\n        // Simple password check for demo\n        if (password !== \"password123\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid password. Use: password123\"\n            }, {\n                status: 401\n            });\n        }\n        // Create token\n        const token = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.createToken)(user);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            user: {\n                ...user,\n                password: undefined\n            },\n            company,\n            token\n        });\n    } catch (error) {\n        console.error(\"Login error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2F1dGgvbG9naW4vcm91dGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBd0Q7QUFDVjtBQUNLO0FBQ2Y7QUFFN0IsZUFBZU0sS0FBS0MsT0FBTztJQUNoQyxJQUFJO1FBQ0YsTUFBTSxFQUFFQyxLQUFLLEVBQUVDLFFBQVEsRUFBRSxHQUFHLE1BQU1GLFFBQVFHLElBQUk7UUFFOUMsMENBQTBDO1FBQzFDLElBQUlDLFVBQVVULDZDQUFFQSxDQUFDVSxVQUFVLENBQUM7UUFDNUIsSUFBSSxDQUFDRCxTQUFTO1lBQ1pBLFVBQVU7Z0JBQ1JFLElBQUk7Z0JBQ0pDLE1BQU07Z0JBQ05DLFVBQVU7Z0JBQ1ZDLFNBQVM7Z0JBQ1RDLFdBQVcsSUFBSUM7Z0JBQ2ZDLFdBQVcsSUFBSUQ7WUFDakI7WUFDQWhCLDZDQUFFQSxDQUFDa0IsYUFBYSxDQUFDVDtRQUNuQjtRQUVBLHdDQUF3QztRQUN4QyxNQUFNVSxZQUFZO1lBQ2hCO2dCQUNFUixJQUFJO2dCQUNKTCxPQUFPO2dCQUNQTSxNQUFNO2dCQUNOUSxNQUFNO2dCQUNOQyxXQUFXO1lBQ2I7WUFDQTtnQkFDRVYsSUFBSTtnQkFDSkwsT0FBTztnQkFDUE0sTUFBTTtnQkFDTlEsTUFBTTtnQkFDTkMsV0FBVztnQkFDWEMsV0FBVztZQUNiO1lBQ0E7Z0JBQ0VYLElBQUk7Z0JBQ0pMLE9BQU87Z0JBQ1BNLE1BQU07Z0JBQ05RLE1BQU07Z0JBQ05DLFdBQVc7Z0JBQ1hDLFdBQVc7WUFDYjtTQUNEO1FBRUQsd0NBQXdDO1FBQ3hDSCxVQUFVSSxPQUFPLENBQUMsQ0FBQ0M7WUFDakIsSUFBSSxDQUFDeEIsNkNBQUVBLENBQUN5QixPQUFPLENBQUNELFNBQVNiLEVBQUUsR0FBRztnQkFDNUJYLDZDQUFFQSxDQUFDMEIsVUFBVSxDQUFDO29CQUNaLEdBQUdGLFFBQVE7b0JBQ1hULFdBQVcsSUFBSUM7b0JBQ2ZDLFdBQVcsSUFBSUQ7Z0JBQ2pCO1lBQ0Y7UUFDRjtRQUVBLHVCQUF1QjtRQUN2QixJQUFJVyxPQUFPM0IsNkNBQUVBLENBQUM0QixjQUFjLENBQUN0QjtRQUU3QixJQUFJLENBQUNxQixNQUFNO1lBQ1Qsc0NBQXNDO1lBQ3RDLE1BQU1FLFNBQVMxQixnREFBTUE7WUFDckJ3QixPQUFPO2dCQUNMaEIsSUFBSWtCO2dCQUNKdkI7Z0JBQ0FNLE1BQU1OLE1BQU13QixLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ3pCVixNQUFNO2dCQUNOQyxXQUFXO2dCQUNYTixXQUFXLElBQUlDO2dCQUNmQyxXQUFXLElBQUlEO1lBQ2pCO1lBQ0FoQiw2Q0FBRUEsQ0FBQzBCLFVBQVUsQ0FBQ0M7UUFDaEI7UUFFQSxpQ0FBaUM7UUFDakMsSUFBSXBCLGFBQWEsZUFBZTtZQUM5QixPQUFPUixxREFBWUEsQ0FBQ1MsSUFBSSxDQUN0QjtnQkFBRXVCLE9BQU87WUFBcUMsR0FDOUM7Z0JBQUVDLFFBQVE7WUFBSTtRQUVsQjtRQUVBLGVBQWU7UUFDZixNQUFNQyxRQUFRLE1BQU1oQyxzREFBV0EsQ0FBQzBCO1FBRWhDLE9BQU81QixxREFBWUEsQ0FBQ1MsSUFBSSxDQUFDO1lBQ3ZCbUIsTUFBTTtnQkFBRSxHQUFHQSxJQUFJO2dCQUFFcEIsVUFBVTJCO1lBQVU7WUFDckN6QjtZQUNBd0I7UUFDRjtJQUNGLEVBQUUsT0FBT0YsT0FBTztRQUNkSSxRQUFRSixLQUFLLENBQUMsZ0JBQWdCQTtRQUM5QixPQUFPaEMscURBQVlBLENBQUNTLElBQUksQ0FDdEI7WUFBRXVCLE9BQU87UUFBd0IsR0FDakM7WUFBRUMsUUFBUTtRQUFJO0lBRWxCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9leHBlbnNlLW1hbmFnZW1lbnQtc3lzdGVtLy4vYXBwL2FwaS9hdXRoL2xvZ2luL3JvdXRlLmpzPzhmMGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xyXG5pbXBvcnQgeyBkYiB9IGZyb20gXCIuLi8uLi8uLi8uLi9saWIvZGItbGlnaHRcIjtcclxuaW1wb3J0IHsgY3JlYXRlVG9rZW4gfSBmcm9tIFwiLi4vLi4vLi4vLi4vbGliL2F1dGhcIjtcclxuaW1wb3J0IHsgdjQgYXMgdXVpZHY0IH0gZnJvbSBcInV1aWRcIjtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3QpIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgeyBlbWFpbCwgcGFzc3dvcmQgfSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xyXG5cclxuICAgIC8vIENyZWF0ZSBkZW1vIGNvbXBhbnkgaWYgaXQgZG9lc24ndCBleGlzdFxyXG4gICAgbGV0IGNvbXBhbnkgPSBkYi5nZXRDb21wYW55KFwiZGVtby1jb21wYW55LWlkXCIpO1xyXG4gICAgaWYgKCFjb21wYW55KSB7XHJcbiAgICAgIGNvbXBhbnkgPSB7XHJcbiAgICAgICAgaWQ6IFwiZGVtby1jb21wYW55LWlkXCIsXHJcbiAgICAgICAgbmFtZTogXCJEZW1vIENvbXBhbnlcIixcclxuICAgICAgICBjdXJyZW5jeTogXCJVU0RcIixcclxuICAgICAgICBjb3VudHJ5OiBcIlVTXCIsXHJcbiAgICAgICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgpLFxyXG4gICAgICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoKSxcclxuICAgICAgfTtcclxuICAgICAgZGIuY3JlYXRlQ29tcGFueShjb21wYW55KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBDcmVhdGUgZGVtbyB1c2VycyBpZiB0aGV5IGRvbid0IGV4aXN0XHJcbiAgICBjb25zdCBkZW1vVXNlcnMgPSBbXHJcbiAgICAgIHtcclxuICAgICAgICBpZDogXCJhZG1pbi11c2VyLWlkXCIsXHJcbiAgICAgICAgZW1haWw6IFwiYWRtaW5AY29tcGFueS5jb21cIixcclxuICAgICAgICBuYW1lOiBcIkRlbW8gQWRtaW5cIixcclxuICAgICAgICByb2xlOiBcImFkbWluXCIsXHJcbiAgICAgICAgY29tcGFueUlkOiBcImRlbW8tY29tcGFueS1pZFwiLFxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgaWQ6IFwibWFuYWdlci11c2VyLWlkXCIsXHJcbiAgICAgICAgZW1haWw6IFwibWFuYWdlckBjb21wYW55LmNvbVwiLFxyXG4gICAgICAgIG5hbWU6IFwiRGVtbyBNYW5hZ2VyXCIsXHJcbiAgICAgICAgcm9sZTogXCJtYW5hZ2VyXCIsXHJcbiAgICAgICAgY29tcGFueUlkOiBcImRlbW8tY29tcGFueS1pZFwiLFxyXG4gICAgICAgIG1hbmFnZXJJZDogXCJhZG1pbi11c2VyLWlkXCIsIC8vIE1hbmFnZXIgcmVwb3J0cyB0byBhZG1pblxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgaWQ6IFwiZW1wbG95ZWUtdXNlci1pZFwiLFxyXG4gICAgICAgIGVtYWlsOiBcImVtcGxveWVlQGNvbXBhbnkuY29tXCIsXHJcbiAgICAgICAgbmFtZTogXCJEZW1vIEVtcGxveWVlXCIsXHJcbiAgICAgICAgcm9sZTogXCJlbXBsb3llZVwiLFxyXG4gICAgICAgIGNvbXBhbnlJZDogXCJkZW1vLWNvbXBhbnktaWRcIixcclxuICAgICAgICBtYW5hZ2VySWQ6IFwibWFuYWdlci11c2VyLWlkXCIsXHJcbiAgICAgIH0sXHJcbiAgICBdO1xyXG5cclxuICAgIC8vIENyZWF0ZSBkZW1vIHVzZXJzIGlmIHRoZXkgZG9uJ3QgZXhpc3RcclxuICAgIGRlbW9Vc2Vycy5mb3JFYWNoKChkZW1vVXNlcikgPT4ge1xyXG4gICAgICBpZiAoIWRiLmdldFVzZXIoZGVtb1VzZXIuaWQpKSB7XHJcbiAgICAgICAgZGIuY3JlYXRlVXNlcih7XHJcbiAgICAgICAgICAuLi5kZW1vVXNlcixcclxuICAgICAgICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoKSxcclxuICAgICAgICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoKSxcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gQ2hlY2sgaWYgdXNlciBleGlzdHNcclxuICAgIGxldCB1c2VyID0gZGIuZ2V0VXNlckJ5RW1haWwoZW1haWwpO1xyXG5cclxuICAgIGlmICghdXNlcikge1xyXG4gICAgICAvLyBDcmVhdGUgbmV3IHVzZXIgd2l0aCBwcm92aWRlZCBlbWFpbFxyXG4gICAgICBjb25zdCB1c2VySWQgPSB1dWlkdjQoKTtcclxuICAgICAgdXNlciA9IHtcclxuICAgICAgICBpZDogdXNlcklkLFxyXG4gICAgICAgIGVtYWlsLFxyXG4gICAgICAgIG5hbWU6IGVtYWlsLnNwbGl0KFwiQFwiKVswXSxcclxuICAgICAgICByb2xlOiBcImFkbWluXCIsXHJcbiAgICAgICAgY29tcGFueUlkOiBcImRlbW8tY29tcGFueS1pZFwiLFxyXG4gICAgICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoKSxcclxuICAgICAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCksXHJcbiAgICAgIH07XHJcbiAgICAgIGRiLmNyZWF0ZVVzZXIodXNlcik7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gU2ltcGxlIHBhc3N3b3JkIGNoZWNrIGZvciBkZW1vXHJcbiAgICBpZiAocGFzc3dvcmQgIT09IFwicGFzc3dvcmQxMjNcIikge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogXCJJbnZhbGlkIHBhc3N3b3JkLiBVc2U6IHBhc3N3b3JkMTIzXCIgfSxcclxuICAgICAgICB7IHN0YXR1czogNDAxIH1cclxuICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBDcmVhdGUgdG9rZW5cclxuICAgIGNvbnN0IHRva2VuID0gYXdhaXQgY3JlYXRlVG9rZW4odXNlcik7XHJcblxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcclxuICAgICAgdXNlcjogeyAuLi51c2VyLCBwYXNzd29yZDogdW5kZWZpbmVkIH0sXHJcbiAgICAgIGNvbXBhbnksXHJcbiAgICAgIHRva2VuLFxyXG4gICAgfSk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCJMb2dpbiBlcnJvcjpcIiwgZXJyb3IpO1xyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICB7IGVycm9yOiBcIkludGVybmFsIHNlcnZlciBlcnJvclwiIH0sXHJcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbIk5leHRSZXF1ZXN0IiwiTmV4dFJlc3BvbnNlIiwiZGIiLCJjcmVhdGVUb2tlbiIsInY0IiwidXVpZHY0IiwiUE9TVCIsInJlcXVlc3QiLCJlbWFpbCIsInBhc3N3b3JkIiwianNvbiIsImNvbXBhbnkiLCJnZXRDb21wYW55IiwiaWQiLCJuYW1lIiwiY3VycmVuY3kiLCJjb3VudHJ5IiwiY3JlYXRlZEF0IiwiRGF0ZSIsInVwZGF0ZWRBdCIsImNyZWF0ZUNvbXBhbnkiLCJkZW1vVXNlcnMiLCJyb2xlIiwiY29tcGFueUlkIiwibWFuYWdlcklkIiwiZm9yRWFjaCIsImRlbW9Vc2VyIiwiZ2V0VXNlciIsImNyZWF0ZVVzZXIiLCJ1c2VyIiwiZ2V0VXNlckJ5RW1haWwiLCJ1c2VySWQiLCJzcGxpdCIsImVycm9yIiwic3RhdHVzIiwidG9rZW4iLCJ1bmRlZmluZWQiLCJjb25zb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/auth/login/route.js\n");

/***/ }),

/***/ "(rsc)/./lib/auth.js":
/*!*********************!*\
  !*** ./lib/auth.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authenticateUser: () => (/* binding */ authenticateUser),\n/* harmony export */   createToken: () => (/* binding */ createToken),\n/* harmony export */   getCurrentUser: () => (/* binding */ getCurrentUser),\n/* harmony export */   hashPassword: () => (/* binding */ hashPassword),\n/* harmony export */   verifyPassword: () => (/* binding */ verifyPassword),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken)\n/* harmony export */ });\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/esm/jwt/sign.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/esm/jwt/verify.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst JWT_SECRET = new TextEncoder().encode(process.env.JWT_SECRET || \"your-secret-key\");\nasync function hashPassword(password) {\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_0___default().hash(password, 12);\n}\nasync function verifyPassword(password, hashedPassword) {\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_0___default().compare(password, hashedPassword);\n}\nasync function createToken(user) {\n    return new jose__WEBPACK_IMPORTED_MODULE_1__.SignJWT({\n        userId: user.id,\n        email: user.email,\n        role: user.role\n    }).setProtectedHeader({\n        alg: \"HS256\"\n    }).setIssuedAt().setExpirationTime(\"7d\").sign(JWT_SECRET);\n}\nasync function verifyToken(token) {\n    try {\n        const { payload } = await (0,jose__WEBPACK_IMPORTED_MODULE_2__.jwtVerify)(token, JWT_SECRET);\n        return {\n            userId: payload.userId,\n            email: payload.email,\n            role: payload.role\n        };\n    } catch  {\n        return null;\n    }\n}\nasync function authenticateUser(email, password, db) {\n    const user = db.getUserByEmail(email);\n    if (!user) return null;\n    // For demo purposes, we'll use a simple password check\n    // In production, you'd store hashed passwords\n    if (password === \"password123\") {\n        return user;\n    }\n    return null;\n}\nfunction getCurrentUser(token, db) {\n    const payload = verifyToken(token);\n    if (!payload) return null;\n    return db.getUser(payload.userId) || null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvYXV0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQTBDO0FBQ1o7QUFFOUIsTUFBTUcsYUFBYSxJQUFJQyxjQUFjQyxNQUFNLENBQUNDLFFBQVFDLEdBQUcsQ0FBQ0osVUFBVSxJQUFJO0FBRS9ELGVBQWVLLGFBQWFDLFFBQVE7SUFDekMsT0FBT1Asb0RBQVcsQ0FBQ08sVUFBVTtBQUMvQjtBQUVPLGVBQWVFLGVBQWVGLFFBQVEsRUFBRUcsY0FBYztJQUMzRCxPQUFPVix1REFBYyxDQUFDTyxVQUFVRztBQUNsQztBQUVPLGVBQWVFLFlBQVlDLElBQUk7SUFDcEMsT0FBTyxJQUFJZix5Q0FBT0EsQ0FBQztRQUFFZ0IsUUFBUUQsS0FBS0UsRUFBRTtRQUFFQyxPQUFPSCxLQUFLRyxLQUFLO1FBQUVDLE1BQU1KLEtBQUtJLElBQUk7SUFBQyxHQUN0RUMsa0JBQWtCLENBQUM7UUFBRUMsS0FBSztJQUFRLEdBQ2xDQyxXQUFXLEdBQ1hDLGlCQUFpQixDQUFDLE1BQ2xCQyxJQUFJLENBQUNyQjtBQUNWO0FBRU8sZUFBZXNCLFlBQVlDLEtBQUs7SUFDckMsSUFBSTtRQUNGLE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUcsTUFBTTFCLCtDQUFTQSxDQUFDeUIsT0FBT3ZCO1FBQzNDLE9BQU87WUFDTGEsUUFBUVcsUUFBUVgsTUFBTTtZQUN0QkUsT0FBT1MsUUFBUVQsS0FBSztZQUNwQkMsTUFBTVEsUUFBUVIsSUFBSTtRQUNwQjtJQUNGLEVBQUUsT0FBTTtRQUNOLE9BQU87SUFDVDtBQUNGO0FBRU8sZUFBZVMsaUJBQWlCVixLQUFLLEVBQUVULFFBQVEsRUFBRW9CLEVBQUU7SUFDeEQsTUFBTWQsT0FBT2MsR0FBR0MsY0FBYyxDQUFDWjtJQUMvQixJQUFJLENBQUNILE1BQU0sT0FBTztJQUVsQix1REFBdUQ7SUFDdkQsOENBQThDO0lBQzlDLElBQUlOLGFBQWEsZUFBZTtRQUM5QixPQUFPTTtJQUNUO0lBRUEsT0FBTztBQUNUO0FBRU8sU0FBU2dCLGVBQWVMLEtBQUssRUFBRUcsRUFBRTtJQUN0QyxNQUFNRixVQUFVRixZQUFZQztJQUM1QixJQUFJLENBQUNDLFNBQVMsT0FBTztJQUVyQixPQUFPRSxHQUFHRyxPQUFPLENBQUNMLFFBQVFYLE1BQU0sS0FBSztBQUN2QyIsInNvdXJjZXMiOlsid2VicGFjazovL2V4cGVuc2UtbWFuYWdlbWVudC1zeXN0ZW0vLi9saWIvYXV0aC5qcz8yODdiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNpZ25KV1QsIGp3dFZlcmlmeSB9IGZyb20gJ2pvc2UnO1xyXG5pbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdGpzJztcclxuXHJcbmNvbnN0IEpXVF9TRUNSRVQgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUocHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCB8fCAneW91ci1zZWNyZXQta2V5Jyk7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaGFzaFBhc3N3b3JkKHBhc3N3b3JkKSB7XHJcbiAgcmV0dXJuIGJjcnlwdC5oYXNoKHBhc3N3b3JkLCAxMik7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlQYXNzd29yZChwYXNzd29yZCwgaGFzaGVkUGFzc3dvcmQpIHtcclxuICByZXR1cm4gYmNyeXB0LmNvbXBhcmUocGFzc3dvcmQsIGhhc2hlZFBhc3N3b3JkKTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZVRva2VuKHVzZXIpIHtcclxuICByZXR1cm4gbmV3IFNpZ25KV1QoeyB1c2VySWQ6IHVzZXIuaWQsIGVtYWlsOiB1c2VyLmVtYWlsLCByb2xlOiB1c2VyLnJvbGUgfSlcclxuICAgIC5zZXRQcm90ZWN0ZWRIZWFkZXIoeyBhbGc6ICdIUzI1NicgfSlcclxuICAgIC5zZXRJc3N1ZWRBdCgpXHJcbiAgICAuc2V0RXhwaXJhdGlvblRpbWUoJzdkJylcclxuICAgIC5zaWduKEpXVF9TRUNSRVQpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdmVyaWZ5VG9rZW4odG9rZW4pIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgeyBwYXlsb2FkIH0gPSBhd2FpdCBqd3RWZXJpZnkodG9rZW4sIEpXVF9TRUNSRVQpO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgdXNlcklkOiBwYXlsb2FkLnVzZXJJZCxcclxuICAgICAgZW1haWw6IHBheWxvYWQuZW1haWwsXHJcbiAgICAgIHJvbGU6IHBheWxvYWQucm9sZSxcclxuICAgIH07XHJcbiAgfSBjYXRjaCB7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhdXRoZW50aWNhdGVVc2VyKGVtYWlsLCBwYXNzd29yZCwgZGIpIHtcclxuICBjb25zdCB1c2VyID0gZGIuZ2V0VXNlckJ5RW1haWwoZW1haWwpO1xyXG4gIGlmICghdXNlcikgcmV0dXJuIG51bGw7XHJcblxyXG4gIC8vIEZvciBkZW1vIHB1cnBvc2VzLCB3ZSdsbCB1c2UgYSBzaW1wbGUgcGFzc3dvcmQgY2hlY2tcclxuICAvLyBJbiBwcm9kdWN0aW9uLCB5b3UnZCBzdG9yZSBoYXNoZWQgcGFzc3dvcmRzXHJcbiAgaWYgKHBhc3N3b3JkID09PSAncGFzc3dvcmQxMjMnKSB7XHJcbiAgICByZXR1cm4gdXNlcjtcclxuICB9XHJcbiAgXHJcbiAgcmV0dXJuIG51bGw7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRDdXJyZW50VXNlcih0b2tlbiwgZGIpIHtcclxuICBjb25zdCBwYXlsb2FkID0gdmVyaWZ5VG9rZW4odG9rZW4pO1xyXG4gIGlmICghcGF5bG9hZCkgcmV0dXJuIG51bGw7XHJcbiAgXHJcbiAgcmV0dXJuIGRiLmdldFVzZXIocGF5bG9hZC51c2VySWQpIHx8IG51bGw7XHJcbn1cclxuIl0sIm5hbWVzIjpbIlNpZ25KV1QiLCJqd3RWZXJpZnkiLCJiY3J5cHQiLCJKV1RfU0VDUkVUIiwiVGV4dEVuY29kZXIiLCJlbmNvZGUiLCJwcm9jZXNzIiwiZW52IiwiaGFzaFBhc3N3b3JkIiwicGFzc3dvcmQiLCJoYXNoIiwidmVyaWZ5UGFzc3dvcmQiLCJoYXNoZWRQYXNzd29yZCIsImNvbXBhcmUiLCJjcmVhdGVUb2tlbiIsInVzZXIiLCJ1c2VySWQiLCJpZCIsImVtYWlsIiwicm9sZSIsInNldFByb3RlY3RlZEhlYWRlciIsImFsZyIsInNldElzc3VlZEF0Iiwic2V0RXhwaXJhdGlvblRpbWUiLCJzaWduIiwidmVyaWZ5VG9rZW4iLCJ0b2tlbiIsInBheWxvYWQiLCJhdXRoZW50aWNhdGVVc2VyIiwiZGIiLCJnZXRVc2VyQnlFbWFpbCIsImdldEN1cnJlbnRVc2VyIiwiZ2V0VXNlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth.js\n");

/***/ }),

/***/ "(rsc)/./lib/db-light.js":
/*!*************************!*\
  !*** ./lib/db-light.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   db: () => (/* binding */ db)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/v4.js\");\n// Lightweight database for faster loading\n\nclass LightDatabase {\n    constructor(){\n        this.users = new Map();\n        this.companies = new Map();\n        this.expenses = new Map();\n        this.approvalRules = new Map();\n        this.approvalSequences = new Map();\n        this.approvals = new Map();\n        this.expenseCategories = new Map();\n        this.ocrResults = new Map();\n        this.initialized = false;\n    }\n    // Lazy initialization\n    async initialize() {\n        if (this.initialized) return;\n        try {\n            // Load from localStorage only when needed\n            const storedData = localStorage.getItem(\"expense_db\");\n            if (storedData) {\n                const data = JSON.parse(storedData);\n                // Restore data efficiently\n                if (data.users) this.users = new Map(Object.entries(data.users));\n                if (data.companies) this.companies = new Map(Object.entries(data.companies));\n                if (data.expenses) this.expenses = new Map(Object.entries(data.expenses));\n                if (data.approvalRules) this.approvalRules = new Map(Object.entries(data.approvalRules));\n                if (data.approvals) this.approvals = new Map(Object.entries(data.approvals));\n                if (data.expenseCategories) this.expenseCategories = new Map(Object.entries(data.expenseCategories));\n                if (data.ocrResults) this.ocrResults = new Map(Object.entries(data.ocrResults));\n            } else {\n                // Initialize with minimal sample data\n                this.initializeSampleData();\n            }\n        } catch (error) {\n            console.error(\"Error initializing database:\", error);\n            this.initializeSampleData();\n        }\n        this.initialized = true;\n    }\n    // Initialize sample data\n    initializeSampleData() {\n        const company = {\n            id: \"1\",\n            name: \"Demo Company\",\n            currency: \"USD\",\n            country: \"US\",\n            createdAt: new Date(),\n            updatedAt: new Date()\n        };\n        this.companies.set(company.id, company);\n        const admin = {\n            id: \"1\",\n            email: \"admin@company.com\",\n            name: \"Demo Admin\",\n            role: \"admin\",\n            companyId: \"1\",\n            createdAt: new Date(),\n            updatedAt: new Date()\n        };\n        const manager = {\n            id: \"2\",\n            email: \"manager@company.com\",\n            name: \"Demo Manager\",\n            role: \"manager\",\n            companyId: \"1\",\n            createdAt: new Date(),\n            updatedAt: new Date()\n        };\n        const employee = {\n            id: \"3\",\n            email: \"employee@company.com\",\n            name: \"Demo Employee\",\n            role: \"employee\",\n            companyId: \"1\",\n            managerId: \"2\",\n            createdAt: new Date(),\n            updatedAt: new Date()\n        };\n        this.users.set(admin.id, admin);\n        this.users.set(manager.id, manager);\n        this.users.set(employee.id, employee);\n    }\n    // Debounced save\n    saveToStorage() {\n        if (this.saveTimeout) {\n            clearTimeout(this.saveTimeout);\n        }\n        this.saveTimeout = setTimeout(()=>{\n            try {\n                const data = {\n                    users: Object.fromEntries(this.users),\n                    companies: Object.fromEntries(this.companies),\n                    expenses: Object.fromEntries(this.expenses),\n                    approvalRules: Object.fromEntries(this.approvalRules),\n                    approvals: Object.fromEntries(this.approvals),\n                    expenseCategories: Object.fromEntries(this.expenseCategories),\n                    ocrResults: Object.fromEntries(this.ocrResults)\n                };\n                localStorage.setItem(\"expense_db\", JSON.stringify(data));\n            } catch (error) {\n                console.error(\"Error saving data:\", error);\n            }\n        }, 200);\n    }\n    // User operations\n    async createUser(user) {\n        await this.initialize();\n        this.users.set(user.id, user);\n        this.saveToStorage();\n        return user;\n    }\n    async getUser(id) {\n        await this.initialize();\n        return this.users.get(id);\n    }\n    async getUserByEmail(email) {\n        await this.initialize();\n        return Array.from(this.users.values()).find((user)=>user.email === email);\n    }\n    async updateUser(id, updates) {\n        await this.initialize();\n        const user = this.users.get(id);\n        if (user) {\n            const updatedUser = {\n                ...user,\n                ...updates,\n                updatedAt: new Date()\n            };\n            this.users.set(id, updatedUser);\n            this.saveToStorage();\n            return updatedUser;\n        }\n        return undefined;\n    }\n    async getUsersByCompany(companyId) {\n        await this.initialize();\n        return Array.from(this.users.values()).filter((user)=>user.companyId === companyId);\n    }\n    async getUsersByManager(managerId) {\n        await this.initialize();\n        return Array.from(this.users.values()).filter((user)=>user.managerId === managerId);\n    }\n    async getManager(userId) {\n        await this.initialize();\n        const user = this.users.get(userId);\n        return user && user.managerId ? this.users.get(user.managerId) : null;\n    }\n    // Company operations\n    async createCompany(company) {\n        await this.initialize();\n        this.companies.set(company.id, company);\n        this.saveToStorage();\n        return company;\n    }\n    async getCompany(id) {\n        await this.initialize();\n        return this.companies.get(id);\n    }\n    // Expense operations\n    async createExpense(expense) {\n        await this.initialize();\n        this.expenses.set(expense.id, expense);\n        this.saveToStorage();\n        return expense;\n    }\n    async getExpense(id) {\n        await this.initialize();\n        return this.expenses.get(id);\n    }\n    async getExpensesByUser(userId) {\n        await this.initialize();\n        return Array.from(this.expenses.values()).filter((expense)=>expense.userId === userId);\n    }\n    async getExpensesByCompany(companyId) {\n        await this.initialize();\n        return Array.from(this.expenses.values()).filter((expense)=>expense.companyId === companyId);\n    }\n    async getPendingExpensesForApprover(approverId) {\n        await this.initialize();\n        return Array.from(this.expenses.values()).filter((expense)=>{\n            if (expense.status !== \"pending\") return false;\n            const approvalChain = expense.approvalChain || [];\n            const currentStep = expense.currentApprovalStep || 0;\n            if (currentStep < approvalChain.length) {\n                return approvalChain[currentStep] === approverId;\n            }\n            return false;\n        });\n    }\n    async getApprovedExpensesForApprover(approverId) {\n        await this.initialize();\n        const approvals = Array.from(this.approvals.values()).filter((approval)=>approval.approverId === approverId && approval.status === \"approved\");\n        return approvals.map((approval)=>{\n            const expense = this.expenses.get(approval.expenseId);\n            return expense ? {\n                ...expense,\n                approvalDetails: approval\n            } : null;\n        }).filter((expense)=>expense !== null);\n    }\n    async getAllExpensesForApprover(approverId) {\n        await this.initialize();\n        const pendingExpenses = await this.getPendingExpensesForApprover(approverId);\n        const approvedExpenses = await this.getApprovedExpensesForApprover(approverId);\n        return {\n            pendingExpenses: pendingExpenses.map((expense)=>({\n                    ...expense,\n                    status: \"pending\",\n                    approvalDetails: null\n                })),\n            approvedExpenses: approvedExpenses.map((expense)=>({\n                    ...expense,\n                    status: \"approved\",\n                    approvalDetails: expense.approvalDetails\n                }))\n        };\n    }\n    async updateExpense(id, updates) {\n        await this.initialize();\n        const expense = this.expenses.get(id);\n        if (expense) {\n            const updatedExpense = {\n                ...expense,\n                ...updates,\n                updatedAt: new Date()\n            };\n            this.expenses.set(id, updatedExpense);\n            this.saveToStorage();\n            return updatedExpense;\n        }\n        return undefined;\n    }\n    // Approval operations\n    async createApproval(approval) {\n        await this.initialize();\n        this.approvals.set(approval.id, approval);\n        this.saveToStorage();\n        return approval;\n    }\n    async getApprovalsByExpense(expenseId) {\n        await this.initialize();\n        return Array.from(this.approvals.values()).filter((approval)=>approval.expenseId === expenseId);\n    }\n    // Approval Rule operations\n    async createApprovalRule(rule) {\n        await this.initialize();\n        this.approvalRules.set(rule.id, rule);\n        this.saveToStorage();\n        return rule;\n    }\n    async getApprovalRulesByCompany(companyId) {\n        await this.initialize();\n        return Array.from(this.approvalRules.values()).filter((rule)=>rule.companyId === companyId && rule.isActive);\n    }\n    async getApprovalRule(id) {\n        await this.initialize();\n        return this.approvalRules.get(id);\n    }\n    async updateApprovalRule(id, updates) {\n        await this.initialize();\n        const rule = this.approvalRules.get(id);\n        if (rule) {\n            const updatedRule = {\n                ...rule,\n                ...updates,\n                updatedAt: new Date()\n            };\n            this.approvalRules.set(id, updatedRule);\n            this.saveToStorage();\n            return updatedRule;\n        }\n        return undefined;\n    }\n    async deleteApprovalRule(id) {\n        await this.initialize();\n        const rule = this.approvalRules.get(id);\n        if (rule) {\n            this.approvalRules.delete(id);\n            this.saveToStorage();\n            return true;\n        }\n        return false;\n    }\n    // Approval Sequence operations\n    async createApprovalSequence(sequence) {\n        await this.initialize();\n        this.approvalSequences.set(sequence.id, sequence);\n        this.saveToStorage();\n        return sequence;\n    }\n    async getApprovalSequencesByCompany(companyId) {\n        await this.initialize();\n        return Array.from(this.approvalSequences.values()).filter((sequence)=>sequence.companyId === companyId && sequence.isActive);\n    }\n    async getApprovalSequence(id) {\n        await this.initialize();\n        return this.approvalSequences.get(id);\n    }\n    async updateApprovalSequence(id, updates) {\n        await this.initialize();\n        const sequence = this.approvalSequences.get(id);\n        if (sequence) {\n            const updatedSequence = {\n                ...sequence,\n                ...updates,\n                updatedAt: new Date()\n            };\n            this.approvalSequences.set(id, updatedSequence);\n            this.saveToStorage();\n            return updatedSequence;\n        }\n        return undefined;\n    }\n    async deleteApprovalSequence(id) {\n        await this.initialize();\n        const sequence = this.approvalSequences.get(id);\n        if (sequence) {\n            this.approvalSequences.delete(id);\n            this.saveToStorage();\n            return true;\n        }\n        return false;\n    }\n    // Enhanced approval workflow\n    async processConditionalApproval(expenseId, approverId, status, comment) {\n        await this.initialize();\n        const expense = this.expenses.get(expenseId);\n        if (!expense) return null;\n        const approval = {\n            id: (0,uuid__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(),\n            expenseId,\n            approverId,\n            status,\n            comment,\n            step: expense.currentApprovalStep || 0,\n            createdAt: new Date(),\n            updatedAt: new Date()\n        };\n        await this.createApproval(approval);\n        if (status === \"rejected\") {\n            return await this.updateExpense(expenseId, {\n                status: \"rejected\"\n            });\n        }\n        const approvalRules = await this.getApprovalRulesByCompany(expense.companyId);\n        const applicableRules = approvalRules.filter((rule)=>rule.minAmount <= expense.amount && rule.maxAmount >= expense.amount);\n        for (const rule of applicableRules){\n            if (await this.checkConditionalRule(expenseId, rule)) {\n                return await this.updateExpense(expenseId, {\n                    status: \"approved\"\n                });\n            }\n        }\n        const nextStep = (expense.currentApprovalStep || 0) + 1;\n        if (nextStep >= (expense.approvalChain || []).length) {\n            return await this.updateExpense(expenseId, {\n                status: \"approved\",\n                currentApprovalStep: nextStep\n            });\n        } else {\n            return await this.updateExpense(expenseId, {\n                currentApprovalStep: nextStep\n            });\n        }\n    }\n    async checkConditionalRule(expenseId, rule) {\n        await this.initialize();\n        const approvals = await this.getApprovalsByExpense(expenseId);\n        const approvedApprovals = approvals.filter((a)=>a.status === \"approved\");\n        if (rule.percentageThreshold && rule.percentageThreshold > 0) {\n            const totalApprovers = (rule.approverIds || []).length;\n            const approvedCount = approvedApprovals.length;\n            const percentage = approvedCount / totalApprovers * 100;\n            if (percentage >= rule.percentageThreshold) {\n                return true;\n            }\n        }\n        if (rule.specificApproverId) {\n            const hasSpecificApproval = approvedApprovals.some((a)=>a.approverId === rule.specificApproverId);\n            if (hasSpecificApproval) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nconst db = new LightDatabase();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/db-light.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/uuid","vendor-chunks/jose","vendor-chunks/bcryptjs"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Flogin%2Froute&page=%2Fapi%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Flogin%2Froute.js&appDir=C%3A%5CUsers%5Cknsja%5CDesktop%5COdoo%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cknsja%5CDesktop%5COdoo&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();